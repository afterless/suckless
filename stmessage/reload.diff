diff --git a/main.c b/main.c
index cb85fa0..1f36bc8 100644
--- a/main.c
+++ b/main.c
@@ -12,18 +12,24 @@
 #include <X11/Xutil.h>
 #include <X11/Xatom.h>
 
-void ScanTreeChildren(Display *display, Window *window);
+void ScanTreeChildren(Display *display, Window *window, char *name);
 
 int main(int argc, char **argv) {
+    if (argc < 2) {
+        fprintf(stderr, "usage: %s target1 target2 ...", argv[0]);
+        return 1;
+    }
+
     Display *display = XOpenDisplay(NULL);
     Window rootWindow = RootWindow(display, 0);
 
-    ScanTreeChildren(display, &rootWindow);
+    for (int i = 1; i < argc; i++)
+        ScanTreeChildren(display, &rootWindow, argv[i]);
 
     return 0;
 }
 
-void ScanTreeChildren(Display *display, Window *window) {
+void ScanTreeChildren(Display *display, Window *window, char *name) {
     Window root;
     Window parent;
     Window *children = NULL;
@@ -39,7 +45,7 @@ void ScanTreeChildren(Display *display, Window *window) {
             continue;
         }
 
-        if (strcmp("st", hint.res_name) == 0) {
+        if (strcmp(name, hint.res_name) == 0) {
             XClientMessageEvent event;
             event.type = ClientMessage;
             event.message_type = XInternAtom(display, "ReloadColors", False);
@@ -52,6 +58,6 @@ void ScanTreeChildren(Display *display, Window *window) {
         }
 
         // printf("res_name: %s; res_class: %s\n", hint.res_name, hint.res_class);
-        ScanTreeChildren(display, &children[i]);
+        ScanTreeChildren(display, &children[i], name);
    }
 }
